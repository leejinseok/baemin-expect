buildscript {
    ext {
        springVersion = "3.0.4"
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'application'
    id 'java'
    id 'org.springframework.boot' version "${springVersion}"
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

allprojects {
    apply plugin: 'application'

    repositories {
        mavenCentral()
    }

    group "com.expect.baemin"
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'
}

def apiProject = project(':baemin-api')
def infraProject = project(':baemin-infra')

/**
 * 프로젝트 전체 설정
 */
def allProjects = [
        apiProject,
        infraProject
]
configure(allProjects) {

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }
}

/**
 * 스프링 관련 프로젝트 설정
 */
def springProjects = [
        apiProject,
        infraProject
]
configure(springProjects) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    }
}

/**
 * 웹 관련 프로젝트 설정
 */
def webProjects = [apiProject]
configure(webProjects) {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

/**
 * jpa 관련 프로젝트 설정
 */
def jpaProjects = [apiProject, infraProject]
configure(jpaProjects) {
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

        // querydsl
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
        annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

        runtimeOnly 'com.mysql:mysql-connector-j'
    }
}
